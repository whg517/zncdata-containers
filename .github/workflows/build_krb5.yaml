name: Build krb5


env:
  PRODUCT_NAME: krb5
  KUBEDOOP_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || '0.0.0-dev' }}
  REGISTRY: quay.io/zncdatadev

on:
  push:
    branches:
      - main
    tags:
        - '\d+.\d+.\d+*'
    paths:
      - krb5/**
      - .github/actions/**
      - .github/workflows/build_krb5.yaml
  pull_request:
    branches:
      - main
    paths:
      - krb5/**
      - .github/actions/**
      - .github/workflows/build_krb5.yaml



# Enable oidc token permission for image sign tool cosign.
permissions:
  contents: read  # for checking out the code
  id-token: write # required for OIDC if used in the build-and-push action


jobs:
  product-shard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get product versions
        id: product-shard
        uses: ./.github/actions/product-shard
        with:
          product_name: ${{ env.PRODUCT_NAME }}
    outputs:
      versions: ${{ steps.product-shard.outputs.versions }}

  build-image:
    name: Build ${{ matrix.version }} on ${{ matrix.arch }}
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'zncdatadev' && github.event_name == 'push' }}
    needs:
      - product-shard
    strategy:
      matrix:
        version: ${{fromJson(needs.product-shard.outputs.versions)}}
        arch: [amd64, arm64]
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: arm64
            platform: linux/arm64
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Run build
        uses: ./.github/actions/build-and-push
        with:
          registry: ${{ env.REGISTRY }}
          registry_username: ${{ secrets.QUAY_USERNAME }}
          registry_password: ${{ secrets.QUAY_PASSWORD }}
          kubedoop_version: ${{ env.KUBEDOOP_VERSION }}
          product_name: ${{ env.PRODUCT_NAME }}
          product_version: ${{ matrix.version }}
          platform: ${{ matrix.platform }}
          arch_suffix: true
          push: ${{ github.event_name == 'push' }}
          sign: ${{ github.ref_type == 'tag' }}
          action_debug: 'false' # enable debug for the build-and-push action if needed


  build-manifest:
    name: Create manifest for ${{ matrix.version }}
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'zncdatadev' && github.event_name == 'push' }}
    needs:
      - product-shard
      - build-image
    strategy:
      matrix:
        version: ${{fromJson(needs.product-shard.outputs.versions)}}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Publish manifest
        uses: ./.github/actions/publish-manifest
        with:
          registry: ${{ env.REGISTRY }}
          registry_username: ${{ secrets.QUAY_USERNAME }}
          registry_password: ${{ secrets.QUAY_PASSWORD }}
          product_name: ${{ env.PRODUCT_NAME }}
          product_version: ${{ matrix.version }}
          kubedoop_version: ${{ env.KUBEDOOP_VERSION }}
          platforms: 'amd64,arm64'
          sign: ${{ github.ref_type == 'tag' }}
          action_debug: 'false'
